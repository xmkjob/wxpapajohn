package com.papa.wx.web.controller;




import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.papa.wx.web.model.Groups;
import com.papa.wx.web.model.Message;
import com.papa.wx.web.model.SalesConsultant;
import com.papa.wx.web.result.JsonResult;
import com.papa.wx.web.service.MessageService;
import com.papa.wx.web.service.SalesConsultantService;
import com.papa.wx.web.util.CFConstants;
import com.papa.wx.web.util.JsonUtil;



/*
 * the controller is used to provide the page held by Jinxin

2. 产品预约（预约 order，选择orderselect，完成ordercomplet）

3. 绑定，解绑
 */


@Controller
public class MessageJsonController {
	
	private static final Logger LOG = LoggerFactory.getLogger(MessageJsonController.class);

	@Autowired
	private MessageService messageService;
	

	@RequestMapping(value="/mobile/send")
	public ModelAndView  ajax1( HttpServletRequest request, HttpServletResponse response) {
		
		String poxyId = request.getParameter("poxyId");
		String customerId  = request.getParameter("customerId");
		String salesConsultantId =  request.getParameter("salesConsultantId");
		String details = request.getParameter("details");
		
		try {
			details = URLEncoder.encode(details, "UTF-8");
		} catch (UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		String groupId = request.getParameter("groupId");
		groupId = groupId.split("_")[1];
		
		String urlStr = "http://xinfangim-qa.sohusce.com/auto/message/send";  
		System.out.println("URL:"+urlStr);
		String param ="consultantUid="+salesConsultantId+"&clientUid="+poxyId+"&groupId="+groupId+"&content="+details;
		 URL url;
		 PrintWriter out = null; 
		 BufferedReader in = null;  
		 String result = "";  
        try {
            url = new URL(urlStr);
            HttpURLConnection URLconnection =(HttpURLConnection)  url.openConnection();  
            URLconnection.setRequestMethod("POST");  
            //设置通用的请求属性  
            URLconnection.setRequestProperty("accept", "*/*");  
            URLconnection.setRequestProperty("connection", "Keep-Alive");  
            URLconnection.setRequestProperty("user-agent",  
                "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)");  
            //发送POST请求必须设置如下两行  
            URLconnection.setDoOutput(true);  
            URLconnection.setDoInput(true);  
            
            //获取URLConnection对象对应的输出流  
            out  = new PrintWriter(URLconnection.getOutputStream());  
            //发送请求参数  
            out .print(param);  
            //flush输出流的缓冲  
            out.flush();  
            
          //定义BufferedReader输入流来读取URL的响应  
            in = new BufferedReader(  
                new InputStreamReader(URLconnection.getInputStream()));  
            String line;  
            while ((line = in .readLine()) != null) {  
                result += "/n" + line;  
            }  
        } catch (Exception e) {
            // TODO Auto-generated catch blockeb
            e.printStackTrace();
            System.out.println("发送POST请求出现异常！" + e);  
        }  
		
		
		
		
		long sid = 0;
		long cid = 0;
		
		if(!"".equals(customerId)&&customerId!=null){
		
			cid = Long.parseLong(customerId);
		}
		if(!"".equals(salesConsultantId)&&salesConsultantId!=null){
			sid = Long.parseLong(salesConsultantId);
		}
		
		Message message = new Message();
		
		message.setCustomerId(cid);
		message.setPoxyId(poxyId);
		message.setSalesConsultantId(sid);
		try {
			details = URLDecoder.decode(details, "UTF-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println("save details:"+details);
		message.setDetails(details);
		message.setType(1);
		message.setCreatetime(new Date());
		message.setImgurl("");
		message.setThumbnail("");
		message.setStatus(1);
		message.setSendtype(1);
		messageService.save(message);
		
		return null;
	
    }
	
	
	@RequestMapping(value="/mobile/ref")
	public ModelAndView  ref( HttpServletRequest request, HttpServletResponse response) {
		
		String poxyId = request.getParameter("poxyId");
		String salesConsultantId =  request.getParameter("salesConsultantId");
		//System.out.println("salesConsultantId:"+salesConsultantId);
	//	String url  = "http://pmtest.feiliu.com/api/wanpu.php?time=2014-03-05&type=1&page=2";
		System.out.println("poxyId:"+poxyId);
		System.out.println("salesConsultantId:"+salesConsultantId);
	
		try {
			long saleid = 0;
			if(!"".equals(salesConsultantId)&&salesConsultantId!=null){
				saleid = Long.parseLong(salesConsultantId);
			}
			
			
			List<Message> list = messageService.findByPoxyIdAndSalesConsultantId(poxyId, saleid);
			if(list!=null&&list.size()>0){
				
				 JsonUtil json1 = new JsonUtil();
		            for(int i = 0 ; i<list.size();i++){
		            	Message msg = list.get(i);
		            	JsonUtil json_a = new JsonUtil();
		                json_a.add("customerId", msg.getCustomerId()+"");
		                json_a.add("salesConsultantId", msg.getSalesConsultantId()+"");
		                json_a.add("details", msg.getDetails()+"");
		                json_a.add("type", msg.getType()+"");
		                json_a.add("poxyId", msg.getPoxyId()+"");
		                json_a.add("status",msg.getStatus()+"");
		                json_a.add("createtime", msg.getCreatetime()+"");
		                json_a.add("imgurl", msg.getImgurl()+"");
		                json_a.add("thumbnail", msg.getThumbnail()+"");
		                json_a.add("sendtype", msg.getSendtype()+"");
		                json_a.add("id", msg.getId()+"");
		              
		                json1.add("data", json_a);
		                
		                msg.setStatus(1);
		                
		                messageService.save(msg);
		            }
		            
		            JSONObject arr1 = null;
		            try {
		    			arr1 = new JSONObject(json1.toString());
		    			//System.out.println("arr1:"+arr1);
		    		} catch (ParseException e) {
		    			e.printStackTrace();
		    		}
		            //将查询出来的对象集合转换为json格式
		            
		            JSONArray array =arr1.getJSONArray("data");
		            
		          //  System.out.println("array:"+array);
		            //给请求作出响应
		            response.getWriter().write(array.toString());
			}else{
				 response.getWriter().write("");
			}
			
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	
    }
	

	@RequestMapping(value="/sendMsg",method = RequestMethod.POST)
	public  @ResponseBody JsonResult  get( HttpServletRequest request, HttpServletResponse response) {
		
		
		//System.out.println("count:"+values.hasMoreElements());
		//http://localhost:8080/wxpapajohn/mobile/get?to=100000&from=4&message=bbbbbb777777&imageUrl=images/8.jpg&thumbnail=images/8.jpg&createTime=1413776734771&type=2
		String to =(String)request.getParameter("to");
		String from =(String) request.getParameter("from");
		String message =(String)request.getParameter("message");
		//String customerId = request.getParameter("customerId");
		String imageUrl = (String)request.getParameter("imageUrl");
		String thumbnail =(String) request.getParameter("thumbnail");
		String createTime = (String)request.getParameter("createTime");
		String type =(String)request.getParameter("type");
		
		System.out.println("to:"+to);
		System.out.println("from:"+from);
		System.out.println("message:"+message);
		Message msg = new Message();
		try {
		//	long toId  = 0;
			long fromId  = 0;
			int typeId=0;
			long customerId = 0;
			Date date = new Date();
			//long toId  = 0;
			if(!"".equals(to)&&to!=null){
				//toId =  Long.parseLong(to);
				List<Message> list  = messageService.findByPoxyId(to);
				if(list!=null&&list.size()>0){
					msg = list.get(0);
					customerId = msg.getCustomerId();
				}
				
			}
			if(!"".equals(from)&&from!=null){
				fromId = Long.parseLong(from);
			}
			if(!"".equals(type)&&type!=null){
				typeId = Integer.parseInt(type);
			}
			
			if(typeId==1){
				imageUrl = "";
				thumbnail = "";
			}
			if(typeId==2){
				message = "";
			}
			if(!"".equals(createTime)&&createTime!=null){
				System.out.println("createTime:"+createTime);
				long time = Long.parseLong(createTime);
				SimpleDateFormat sdf= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				//前面的lSysTime是秒数，先乘1000得到毫秒数，再转为java.util.Date类型
				date = new Date(time); 
				//String sDateTime = sdf.format(dt);  //得到精确到秒的表示：08/31/2006 21:08:00
				
			}
			
			
			Message obj = new Message();
			obj.setCustomerId(customerId);
			obj.setDetails(message);
			obj.setImgurl(imageUrl);
			obj.setPoxyId(to);
			obj.setSalesConsultantId(fromId);
			obj.setStatus(0);
			obj.setThumbnail(thumbnail);
			obj.setType(typeId);
			obj.setCreatetime(date);
			obj.setSendtype(2);
			
			
			messageService.save(obj);
		
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	
    }
	
	
	

}
